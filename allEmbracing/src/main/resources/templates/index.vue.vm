<template>
  <div class="app-container">
    <el-form class="${entity}_query_form" inline :model="queryParams" ref="queryForm" v-show="showSearch" size="small" label-width="100px">
#foreach($column in ${table.fields})
      <el-form-item label="$column.comment" prop="${column.propertyName}">
        <el-input
          v-model="queryParams.${column.propertyName}"
          placeholder="请输入$column.comment"
          clearable
          @keyup.enter.native="handleQuery"
        />
      </el-form-item>
#end
      <el-form-item>
        <el-button type="primary" icon="el-icon-search" size="mini" @click="handleQuery">搜索</el-button>
        <el-button icon="el-icon-refresh" size="mini" @click="resetQuery">重置</el-button>
      </el-form-item>
    </el-form>

    <el-row :gutter="10" class="mb8">
      <el-col :span="1.5">
        <el-button
          type="primary"
          plain
          icon="el-icon-plus"
          size="mini"
          @click="handleAdd"
          v-hasPermi="['#if(${package.ModuleName})${package.ModuleName}#end:${table.entityPath}:add']"
        >新增</el-button>
      </el-col>
      <el-col :span="1.5">
        <el-button
          type="success"
          plain
          icon="el-icon-edit"
          size="mini"
          :disabled="single"
          @click="handleUpdate"
          v-hasPermi="['#if(${package.ModuleName})${package.ModuleName}#end:${table.entityPath}:edit']"
        >修改</el-button>
      </el-col>
      <el-col :span="1.5">
        <el-button
          type="danger"
          plain
          icon="el-icon-delete"
          size="mini"
          :disabled="multiple"
          @click="handleDelete"
          v-hasPermi="['#if(${package.ModuleName})${package.ModuleName}#end:${table.entityPath}:remove']"
        >删除</el-button>
      </el-col>
      <el-col :span="1.5">
        <el-button
          type="info"
          plain
          icon="el-icon-upload2"
          size="mini"
          @click="handleImport"
          v-hasPermi="['#if(${package.ModuleName})${package.ModuleName}#end:${table.entityPath}:import']"
        >导入</el-button>
      </el-col>
      <el-col :span="1.5">
        <el-button
          type="warning"
          plain
          icon="el-icon-download"
          size="mini"
          @click="handleExport"
          v-hasPermi="['#if(${package.ModuleName})${package.ModuleName}#end:${table.entityPath}:export']"
        >导出</el-button>
      </el-col>
      <right-toolbar :showSearch.sync="showSearch" @queryTable="getList"></right-toolbar>
    </el-row>

    <el-table ref="tables" v-loading="loading" border fit :data="${entity}List" @selection-change="handleSelectionChange"
              :default-sort="defaultSort" @sort-change="handleSortChange">
      <el-table-column type="selection" width="55" align="center" />
      <el-table-column label="NO." type="index" align="center" width="70">
        <template slot-scope="scope">
          {{(queryParams.pageNum - 1) * queryParams.pageSize + scope.$index + 1}}
        </template>
      </el-table-column>
  #foreach($column in ${table.fields})
      <el-table-column label="$column.comment" align="center" prop="${column.propertyName}" :show-overflow-tooltip="true" sortable="custom" :sort-orders="['descending', 'ascending']" />
  #end
      <el-table-column label="操作" align="center" class-name="small-padding fixed-width" fixed="right" width="120px">
        <template slot-scope="scope">
          <el-button
            size="mini"
            type="text"
            icon="el-icon-edit"
            @click="handleUpdate(scope.row)"
            v-hasPermi="['#if(${package.ModuleName})${package.ModuleName}#end:${table.entityPath}:edit']"
          >修改</el-button>
          <el-button
            size="mini"
            type="text"
            icon="el-icon-delete"
            @click="handleDelete(scope.row)"
            v-hasPermi="['#if(${package.ModuleName})${package.ModuleName}#end:${table.entityPath}:remove']"
          >删除</el-button>
        </template>
      </el-table-column>
    </el-table>
    
    <pagination
      v-show="total>0"
      :total="total"
      :page.sync="queryParams.pageNum"
      :limit.sync="queryParams.pageSize"
      @pagination="getList"
    />

    <!-- 添加或修改$!{table.comment}对话框 -->
    <el-dialog :title="title" :visible.sync="open" :rules="rules" :close-on-click-modal="false"
               v-el-drag-dialog width="80%" append-to-body>
      <el-form class="${entity}_form" inline ref="form" :model="form" :rules="rules" size="small" label-width="100px">
#foreach($column in ${table.fields})
        <el-form-item label="$column.comment" prop="${column.propertyName}">
          <el-input v-model="form.${column.propertyName}" placeholder="请输入$column.comment" clearable />
        </el-form-item>
#end
      </el-form>
      <div slot="footer" class="dialog-footer">
        <el-button type="primary" @click="submitForm">确 定</el-button>
        <el-button @click="cancel">取 消</el-button>
      </div>
    </el-dialog>
    <el-dialog :title="upload.title" :visible.sync="upload.open" width="400px" append-to-body
               v-loading.fullscreen.lock="fullscreenLoading" element-loading-text="请稍候，正在拼命导入中……">
      <el-upload
        ref="upload"
        :limit="1"
        accept=".xlsx, .xls"
        :headers="upload.headers"
        :action="upload.url"
        :disabled="upload.isUploading"
        :on-progress="handleFileUploadProgress"
        :on-success="handleFileSuccess"
        :on-change="onChange"
        :on-remove="onRemove"
        :on-exceed="onExceed"
        :auto-upload="false"
        drag
      >
        <i class="el-icon-upload"></i>
        <div class="el-upload__text">将文件拖到此处，或<em>点击上传</em></div>
        <div class="el-upload__tip text-center" slot="tip">
          <span>仅允许导入xls、xlsx格式文件。</span>
          <el-link type="primary" :underline="false" style="font-size:12px;vertical-align: baseline;" @click="importTemplate">下载模板</el-link>
        </div>
      </el-upload>
      <div slot="footer" class="dialog-footer">
        <el-button type="primary" @click="submitFileForm">确 定</el-button>
        <el-button @click="upload.open = false">取 消</el-button>
      </div>
    </el-dialog>
  </div>
</template>

<script>
import { list${entity}, get${entity}, del${entity}, add${entity}, update${entity}, downloadExcel, downloadTemplateExcel} from "@/api/${package.ModuleName}/${entity}";
import { getToken } from "@/utils/auth";
import elDragDialog from '@/directive/el-drag-dialog'

export default {
  name: "${entity}",
  directives: { elDragDialog },
  data() {
    return {
      // 遮罩层
      loading: true,
      // 选中数组
      ids: [],
      // 非单个禁用
      single: true,
      // 非多个禁用
      multiple: true,
      // 显示搜索条件
      showSearch: true,
      // 总条数
      total: 0,
      // $!{table.comment}表格数据
      ${entity}List: [],
      // 弹出层标题
      title: "",
      // 是否显示弹出层
      open: false,
      // 默认排序
      defaultSort: {prop: 'editDate', order: 'descending'},
      // 查询参数
      queryParams: {
        pageNum: 1,
        pageSize: 10,
#foreach ($column in ${table.fields})
        ${column.propertyName}: null#if($foreach.count != ${table.fields}),#end
#end
      },
      // 表单参数
      form: {},
      // 表单校验
      rules: {
#foreach($field in ${table.fields})
  #if(!${field.metaInfo.nullable})
        $field.propertyName: [
        { required: true, message: "${field.comment}不能为空", trigger: "blur"}
      ]#if($foreach.count != $columns.size()),#end
  #end
#end
      },
      upload: {
        // 是否显示弹出层（用户导入）
        open: false,
        // 弹出层标题（用户导入）
        title: "",
        // 是否禁用上传
        isUploading: false,
        // 是否更新已经存在的用户数据
        updateSupport: 0,
        // 设置上传的请求头部
        headers: { Authorization: "Bearer " + getToken() },
        // 上传的地址
        url: process.env.VUE_APP_BASE_API + "#if(${package.ModuleName})/${package.ModuleName}#end/${table.entityPath}/importData"
      },
      fullscreenLoading: false,
      disableUpload: true,
    };
  },
  created() {
    this.queryParams.orderByColumn = this.defaultSort.prop;
    this.queryParams.isAsc = this.defaultSort.order;
    this.getList();
  },
  methods: {
    /** 查询$!{table.comment}列表 */
    getList() {
      this.loading = true;
      list${entity}(this.queryParams).then(response => {
        this.${entity}List = response.rows;
        this.total = response.total;
        this.loading = false;
      });
    },
    // 取消按钮
    cancel() {
      this.open = false;
      this.reset();
    },
    // 表单重置
    reset() {
      this.form = {
#foreach ($column in ${table.fields})
        ${column.propertyName}: null#if($foreach.count != ${table.fields}),#end
#end
      };
      this.resetForm("form");
    },
    /** 搜索按钮操作 */
    handleQuery() {
      this.queryParams.pageNum = 1;
      this.getList();
    },
    /** 重置按钮操作 */
    resetQuery() {
      this.resetForm("queryForm");
      this.handleQuery();
    },
    // 多选框选中数据
    handleSelectionChange(selection) {
      this.ids = selection.map(item => item.id)
      this.single = selection.length!==1
      this.multiple = !selection.length
    },
    /** 新增按钮操作 */
    handleAdd() {
      this.reset();
      this.open = true;
      this.title = "添加$!{table.comment}";
    },
    /** 修改按钮操作 */
    handleUpdate(row) {
      this.reset();
      const id = row.id || this.ids
      get${entity}(id).then(response => {
        this.form = response.data;
        this.open = true;
        this.title = "修改$!{table.comment}";
      });
    },
    /** 提交按钮 */
    submitForm() {
      this.#[[$]]#refs["form"].validate(valid => {
        if (valid) {
          if (this.form.id != null) {
            update${entity}(this.form).then(response => {
              this.#[[$modal]]#.msgSuccess("修改成功");
              this.open = false;
              this.getList();
            });
          } else {
            add${entity}(this.form).then(response => {
              this.#[[$modal]]#.msgSuccess("新增成功");
              this.open = false;
              this.getList();
            });
          }
        }
      });
    },
    /** 删除按钮操作 */
    handleDelete(row) {
      const ids = row.id || this.ids;
      this.#[[$modal]]#.confirm('是否确认删除$!{table.comment}编号为"' + ids + '"的数据项？').then(function() {
        return del${entity}(ids);
      }).then(() => {
        this.getList();
        this.#[[$modal]]#.msgSuccess("删除成功");
      }).catch(() => {});
    },
    /** 导出按钮操作 */
    handleExport() {
      this.loading = true;
      downloadExcel(this.queryParams).then((result) => {
        const blob = new Blob([result.data], { type: result.data.type });
        let link = document.createElement('a');
        link.href = window.URL.createObjectURL(blob);
        link.download = window.decodeURI(result.headers['content-disposition'].split('=')[1]);
        link.click();
        link.remove();
        window.URL.revokeObjectURL(link.href);
        this.loading = false;
      }).catch((e) => {
      }).then(() => {
      })
    },
    /** 导入按钮操作 */
    handleImport() {
      this.upload.title = "导入";
      this.upload.open = true;
    },
    /** 下载模板操作 */
    importTemplate() {
      downloadTemplateExcel().then((result) => {
        const blob = new Blob([result.data], { type: result.data.type });
        let link = document.createElement('a');
        link.href = window.URL.createObjectURL(blob);
        link.download = window.decodeURI(result.headers['content-disposition'].split('=')[1]);
        link.click();
        link.remove();
        window.URL.revokeObjectURL(link.href);
      })
    },
    // 文件上传中处理
    handleFileUploadProgress(event, file, fileList) {
      this.upload.isUploading = true;
    },
    // 文件上传成功处理
    handleFileSuccess(response, file, fileList) {
      this.upload.open = false;
      this.upload.isUploading = false;
      this.$refs.upload.clearFiles();
      this.$alert("<div style='overflow: auto;overflow-x: hidden;max-height: 70vh;padding: 10px 20px 0;'>" + response.msg + "</div>", "导入结果", { dangerouslyUseHTMLString: true });
      this.getList();
      this.fullscreenLoading = false;
    },
    // 提交上传文件
    submitFileForm() {
      this.upload.open = false;
      this.$refs.upload.submit();
      this.fullscreenLoading = true;
    },
    /** 排序触发事件 */
    handleSortChange(column, prop, order) {
      this.queryParams.orderByColumn = column.prop;
      this.queryParams.isAsc = column.order;
      this.getList();
    },
    onChange(file, fileList){
      if (fileList && fileList.length > 0) {
        this.disableUpload = false;
      }
    },
    onRemove(file, fileList){
      if (fileList.length === 0){
        this.disableUpload = true;
      }
    },
    onExceed(file, fileList){
      if (fileList && fileList.length > 0) {
        this.$message.warning("只能选择一个文件");
      }
    },
  }
};
</script>